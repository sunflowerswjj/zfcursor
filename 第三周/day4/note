1.图片延迟加载
1)布局上,img的src里放占位符地址,真实的地址放在自定义属性上
2)所有的操作都在window.onscroll(滚轮事件)下进行
3)条件:拉动到图片显示区域时再让图片显示出来
    浏览器底边框到body的上偏移(变化)>=图片底边框到body的上偏移(固定)
4)显示真实图片的步骤:
 1.创建一个图片对象
 2.把真实的图片地址赋给图片对象的src属性 ->悄悄的在后台进行加载
 3.校验图片是否加载成功->有两个事件来判断
   若加载成功->onload  把真实图片的地址赋给img的src属性
   若加载失败->onerror
   优化:1.避免重复加载 2.释放内存

   多张图片延迟加载,需要对每个图片进行条件判断,条件判断成功,再把正确的图片显示出来

2.回到顶部思路
1)确定top按钮是显示还是隐藏
2)给top按钮绑定点击事件,点击按钮时,滚动条回到顶部

优化:1)点击完top按钮后让其隐藏

文档节点     元素节点     文本节点    注释节点
  9             1        3            8
 #document  大写标记名    #text     #comment

 节点之间相互关系的属性
 childNodes
 children
 previousSibling- previousElementSibling
 nextSibling - nextElementSibling
 firstChild - firstElementChild
 lastChild  -lastElementChild
 parentNode

 动态操作DOM元素
 1.创建元素
 document.createElement("div");
 document.createTextNode("文本节点")
 2.添加到页面
 父节点.appendChild(ele) 页面上没有这个节点表示添加,有个这点表示移动位置
 父节点.insertBefore(newEle,oldEle);
 3.替换删除元素
  父节点.replaceChild(newEle,oldEle);
  父节点.removeChild(ele);
 4.克隆节点
   ele.cloneNode() 没有传入值或者传入值为false表示浅克隆  true 表示深克隆,把子子孙孙全部克隆出来
 5.操作属性
   ele.getAttribute("data-time");获取属性值
   ele.setAttribute("data-time","20170902") 设置属性值

   ele.zhufeng = "peixun"
   ele.zhufeng

  获取页面元素的方式
   1.id document.getElementById()
   2.标记名 context.getElementsByTagName("div")
   3.类名  context.getElementsByClassName("box1")
   4.name属性 document.getElementsByName("") //IE浏览器只针对表单元素起作用
   5.document.querySelector(); 移动端用
   6.document.querySelectorAll();移动端用