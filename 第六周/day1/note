on 负责定义一个数组,往数组里放队列 这相当于一个程序池
run 负责数组里方法的执行, run是绑定在系统事件上,触发系统事件时,执行run方法(完善ie浏览器常见的事件兼容性问题)
off 解除绑定 把方法从数组里移除

拖拽动画注意的问题:
1.盒子运动的边界问题
2.动画的积累
3.速度的问题
4.如何设置一个条件,当盒子停下来时,不再开启定时器

设计模式--思想
专注于思想和管理,需要有高屋建瓴的能力,从宏观的角度去规划我们的代码
模块化重构思想
1.模块
每个方法都是一个单独模块,所有的功能都完整的
2.模块化最基本的思想:"低耦合,高内聚"
"低耦合":每个模块内部的内容和外界的内容没有多大关联
"高内聚":每个方法都是一个独立或完善的功能和模块

每个方法都该是一个独立的个体,方法与方法之前应该是零耦合

代码分离 ->实现这种"低耦合,高内聚"
代码都写在一起,结构看不去不够清晰,没法实现功能高效复用,整体代码每个功能可利用就降低

难点:分离开后,如何让每个方法之间还有关联呢?
不同方法之间通过接口关联起来
接口:不同方法之间的桥梁(通道) ->"事件标识"

问题:什么是事件标识?
"click","mouseover","mouseout" ->指的就是一个事件标识(这件事)
当这件事(点击事情)发生时,绑定在事件上的行为就会执行
当这件事(点击事情)发生时,标识这件事的行为就会执行
->系统内部解决方案->订阅发布模式
订阅 on(计划事件,计划方法)
发布 run (执行方法)
取消订阅 off(取消事件)

自定义的事件
结婚 "事件标识"
订阅 : 计划事情:
1.给红包
2.喝喜酒

发布 : 事情发生:计划的事情全执行

取消订阅 : 把之前计划的事情取消


烧水  "事件标识"
订阅: 计划事情
1.泡面
2.开水洗脸
3.出去玩

复习以前的知识：
    1.左右切换/渐隐渐现轮播图-构造函数  ---用原生写+自己写运动库
    2.渐隐渐现/左右切换轮播图jQuery+构造函数
    3.商品排序
    4.myForEach封装+map封装
    5.求平均值
    6.判断是否为共有方法的封装
    7.给数组添加去重的公有方法；及 数组去重的公有方法有几种，都写出来；
    8.Object.create()封装
    9.面向对象中的继承方法，你熟悉几种？面向对象的涉及模式，你熟悉几种，简单罗列；
    10.冒泡排序，快排，插排
    11.隔行换色99乘法表
    12.获取四个不重复的随机验证码
    13.任意数求和--arguments
    14.倒计时；
    15.跑马灯；
    16.延迟加载的瀑布流+toTop回到顶部:瀑布流+延迟加载+回到顶部
    17.封装出现次数最多的单词及出现次数-正则
    18.封装日期格式化-正则
    19.封装获取链接参数的键值对-正则；
    20.jQuery插件的扩充-扩充渐隐渐现轮播图；$.extend-类扩充 $.fn.extend:原型-实例用
    21.用setTimeout实现点击左右按钮，div进行左右运动；--涉及：固定步长的运动，定时器的优化，递归思想；
    22.DOM库中的getChildren;包括过滤子元素的功能
    23.DOM库中，getByClass, hasClass,addClass,removeClass
    24.DOM库中，getCss,setCss,setGroupCss,css;
    所有的UI效果：JS+构造函数封装；
    提高工作能力：jQuery+构造函数封装；
    26.拖拽
    27.放大镜（计算比例）
    28.多级菜单
    29.柯理化函数(封装bind,检测数据类型)
    30.event.js
    31.弹性势能动画
    32.es6










