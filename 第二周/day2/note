函数三重身份:
1.普通函数
2.普通对象 通过打点的方式添加属性和方法
3.构造函数 类:原型,实例,constructor
Function instanceof Object ->true
Function.__proto__.__proto__ == Object.prototype
Object instanceof Function ->true
Object.__proto__ == Function.prototype

Function类原型上三个方法call apply bind
 fn.call([this],parameter1,parameter2...); 散列式
 fn.apply([this],[数组]) 打包式的传参
 fn.bind([this],parameter1,parameter2) -预处理机制


 try...catch(e)...
 作用:1.捕获浏览器异常,并且进行相应的兼容性处理
      2.不会在浏览器的控制台里抛出异常
      3.try...catch 不会中止代码运行,下面所有的代码还是正常运行

 throw new Error("")
 throw new TypeError("类型错误")
 throw new RangeError("范围错误");
 throw new ReferenceError("引用错误");
 作用:1.中止代码运行,在控制台里抛出异常
      2.它适合调试来用

  JSON数据格式,是一种格式,不是数据类型
  目的:服务器端和客户端之间传递数据,不同语言之间传递数据,提供了便捷,让我们开发更加高效
  说白了就是为之前的数据类型设置了一些规定,让之前的数据类型变成更加严格的数据类型
  有哪些规定?
  1.引用数据类型只能是数组或者对象,不能是正则,函数,日期对象
  2.基本数据类型里,字符串定义时用双引号
  3.数组或者对象最后一项成员后面不能有逗号
  4.对象里的属性名必须用双引号包起来,数组里若有一项是字符串则必须用双引号

  ajax :不刷新页面的情况下,更新局部的数据
  地址栏输入的地址 协议,端口号,域名 http:8080//www.baidu.com
  ajax请求数据完整过程
  ajax的四步骤

  数据绑定时要注意性能问题:
  回流(reflow):页面的DOM结构(添加,删除,位置移动,尺寸,隐藏等)变化时,浏览器需要重新渲染页面的DOM结构,渲染一次则称为回流一次
   布局发生改变时会发生回流
  重绘:页面元素的样式(仅仅改变外观,没有改变布局 例如:color,background-color)发生改变,只会对当前的元素进行渲染

  数据绑定:
  1.获取数据
  2.以三种绑定数据
    1)字符串拼接方式
    2)动态创建的方式
    3)文档碎片的方式(第二种方式的优化版)


